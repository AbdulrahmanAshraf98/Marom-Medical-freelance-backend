name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        id: test
        run: |
          npm test
        continue-on-error: true

      - name: Notify Discord of test start
        if: always()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Test Started üß™",
              "description": "Testing has started for commit `${{ github.sha }}`.",
              "color": 16776960,
              "thumbnail": {
                "url": "https://example.com/start-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord of test result
        if: steps.test.outcome == 'success'
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Tests Passed ‚úÖ",
              "description": "All tests passed for commit `${{ github.sha }}`. Proceeding to build.",
              "color": 65280,
              "thumbnail": {
                "url": "https://example.com/success-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord of test failure
        if: steps.test.outcome == 'failure'
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Tests Failed ‚ùå",
              "description": "Tests failed for commit `${{ github.sha }}`. Check the logs for details.",
              "color": 16711680,
              "thumbnail": {
                "url": "https://example.com/failure-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

  docker-build:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Notify Discord of build start
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Build Started üèóÔ∏è",
              "description": "Build process started for commit `${{ github.sha }}`.",
              "color": 16776960,
              "thumbnail": {
                "url": "https://example.com/start-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Build Docker image
        run: |
          docker build -t abdulrhmanashraf98/marom-medical:${{ github.sha }} .
          if [ $? -ne 0 ]; then
            echo "Docker build failed"
            exit 1
          fi

      - name: Notify Discord of build success
        if: success()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Build Success üéâ",
              "description": "Build completed successfully for commit `${{ github.sha }}`.",
              "color": 65280,
              "thumbnail": {
                "url": "https://example.com/success-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord of build failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Build Failure üö®",
              "description": "Build failed for commit `${{ github.sha }}`. Check the logs for details.",
              "color": 16711680,
              "thumbnail": {
                "url": "https://example.com/failure-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Notify Discord of deployment start
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Deployment Started üöÄ",
              "description": "Deployment process started for commit `${{ github.sha }}`.",
              "color": 16776960,
              "thumbnail": {
                "url": "https://example.com/start-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Deploy to EC2
        id: deploy
        run: |
          INSTANCE_ID="${{ secrets.INSTANCE_ID }}"
          RESPONSE=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["docker pull abdulrhmanashraf98/marom-medical:${{ github.sha }}", "docker pull abdulrhmanashraf98/marom-medical:latest", "docker stop your-container || true", "docker rm your-container || true", "docker run -d --name your-container -p 8080:80 abdulrhmanashraf98/marom-medical:${{ github.sha }}"]' \
            --timeout-seconds 600 \
            --region eu-north-1)

          if echo "$RESPONSE" | grep -q '"Status": "Failed"'; then
            echo "Deployment failed"
            exit 1
          else
            echo "Deployment succeeded"
          fi

      - name: Notify Discord of deployment success
        if: success()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Deployment Success üéâ",
              "description": "Deployment completed successfully for commit `${{ github.sha }}`.",
              "color": 65280,
              "thumbnail": {
                "url": "https://example.com/success-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord of deployment failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "Deployment Failure üö®",
              "description": "Deployment failed for commit `${{ github.sha }}`. Check the logs for details.",
              "color": 16711680,
              "thumbnail": {
                "url": "https://example.com/failure-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}
