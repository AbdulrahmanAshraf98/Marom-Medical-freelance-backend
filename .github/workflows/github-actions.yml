name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        run: |
          npm test
        continue-on-error: true

      - name: Notify Discord of test failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{"content": "Build process failed for commit '${{ github.sha }}'. Check the logs for details."}' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Notify Discord of build start
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{"content": "Build process started for commit '${{ github.sha }}'"}' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            abdulrhmanashraf98/marom-medical:${{ github.sha }}
            abdulrhmanashraf98/marom-medical:latest
          build-args: |
            APP_PORT=${{ secrets.APP_PORT }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_TYPE=${{ secrets.DB_TYPE }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Deploy to EC2
        if: success()
        run: |
          INSTANCE_ID="your-ec2-instance-id"  # Replace with your EC2 instance ID
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["docker pull abdulrhmanashraf98/marom-medical:${{ github.sha }}", "docker pull abdulrhmanashraf98/marom-medical:latest", "docker stop your-container || true", "docker rm your-container || true", "docker run -d --name your-container -p 80:80 abdulrhmanashraf98/marom-medical:${{ github.sha }}"]' \
            --timeout-seconds 600 \
            --region eu-north-1

      - name: Notify Discord of deployment failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{"content": "Deployment failed for commit '${{ github.sha }}'. Check the logs for details."}' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord of build completion
        if: success()
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{"content": "Build process completed successfully for commit '${{ github.sha }}'"}' ${{ secrets.DISCORD_WEBHOOK_URL }}
