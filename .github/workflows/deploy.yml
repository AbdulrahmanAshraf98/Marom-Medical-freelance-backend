name: Deploy Docker to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        run: docker build -t my-image:${{ github.sha }} .

      - name: Push Docker image
        run: docker push my-image:${{ github.sha }}

      - name: Run Deployment Script
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          INSTANCE_ID: ${{ secrets.INSTANCE_ID }}
          SSM_DOCUMENT_NAME: ${{ secrets.SSM_DOCUMENT_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ssm send-command \
            --region $AWS_REGION \
            --document-name $SSM_DOCUMENT_NAME \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["docker pull my-image:${IMAGE_TAG}", "docker run -d my-image:${IMAGE_TAG}"]'

      - name: Wait for Deployment Completion
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --region $AWS_REGION \
            --document-name $SSM_DOCUMENT_NAME \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["echo $(date)"]' \
            --query 'Command.CommandId' \
            --output text)

          echo "Waiting for SSM command completion..."
          STATUS=$(aws ssm list-commands --command-id $COMMAND_ID --query 'Commands[0].Status' --output text)
          while [ "$STATUS" != "Success" ] && [ "$STATUS" != "Failed" ]; do
            sleep 30
            STATUS=$(aws ssm list-commands --command-id $COMMAND_ID --query 'Commands[0].Status' --output text)
            echo "Current status: $STATUS"
          done

          if [ "$STATUS" == "Success" ]; then
            echo "Deployment completed successfully."
          else
            echo "Deployment failed."
            exit 1
          fi

      - name: Notify Deployment Status
        if: success()
        run: echo "Deployment was successful!"

      - name: Notify Deployment Failure
        if: failure()
        run: echo "Deployment failed. Check logs for details."
