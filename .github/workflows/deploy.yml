name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Set deployment variables
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            abdulrhmanashraf98/marom-medical:${{ github.sha }}
            abdulrhmanashraf98/marom-medical:latest
          build-args: |
            APP_PORT=${{ secrets.APP_PORT }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_TYPE=${{ secrets.DB_TYPE }}

      - name: Notify Discord of build start
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "ðŸ”¨ Build Started",
              "description": "Build process started for commit `${{ github.sha }}`.",
              "color": 16776960,
              "thumbnail": {
                "url": "https://example.com/start-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Deploy to EC2
        run: |
          INSTANCE_ID="${{ secrets.INSTANCE_ID }}"
          CONTAINER_NAME="${{ secrets.DOCKER_CONTAINER_NAME }}"
          IMAGE_TAG="${{ github.sha }}"
          
          if [ -z "$CONTAINER_NAME" ]; then
            echo "Container name is not set. Please set the CONTAINER_NAME in secrets."
            exit 1
          fi

           RESPONSE=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters "commands=[
              \"docker pull abdulrhmanashraf98/marom-medical:$IMAGE_TAG\",
              \"docker images -q | grep 'abdulrhmanashraf98/marom-medical' | xargs -r docker rmi -f\",
              \"docker images -f 'dangling=true' -q | xargs -r docker rmi -f\",
              \"docker system prune -af\",
              \"docker ps -q -f name='$CONTAINER_NAME' | xargs -r docker stop\",
              \"docker ps -a -q -f name='$CONTAINER_NAME' | xargs -r docker rm\",
              \"docker run -d --name '$CONTAINER_NAME' -p 8080:80 abdulrhmanashraf98/marom-medical:$IMAGE_TAG\"
            ]" \
            --timeout-seconds 600 \
            --region eu-north-1)

          echo "Deployment response: $RESPONSE"

      - name: Notify Discord of deployment
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "ðŸš€ Deployment Completed",
              "description": "Deployment to EC2 instance completed for commit `${{ github.sha }}`.",
              "color": 65280,
              "thumbnail": {
                "url": "https://example.com/success-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}
