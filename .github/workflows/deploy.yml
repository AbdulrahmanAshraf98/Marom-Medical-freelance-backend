name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Notify Discord of deployment start
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "üöÄ Deployment Started",
              "description": "Deployment process started for commit `${{ github.sha }}`.",
              "color": 16776960,
              "thumbnail": {
                "url": "https://example.com/start-image.png"
              },
              "fields": [
                {
                  "name": "Commit SHA",
                  "value": "${{ github.sha }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "GitHub Actions CI/CD"
              }
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Deploy to EC2
        id: deploy
        run: |
          INSTANCE_ID="${{ secrets.INSTANCE_ID }}"
          CONTAINER_NAME="${{ secrets.DOCKER_CONTAINER_NAME }}"
          RESPONSE=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["docker pull abdulrhmanashraf98/marom-medical:${{ github.sha }}", "docker stop $CONTAINER_NAME || true", "docker rm $CONTAINER_NAME || true", "docker run -d --name $CONTAINER_NAME -p 8080:80 abdulrhmanashraf98/marom-medical:${{ github.sha }}"]' \
            --timeout-seconds 600 \
            --region eu-north-1)

          COMMAND_ID=$(echo "$RESPONSE" | jq -r '.Command.CommandId')
          STATUS=""

          while [ "$STATUS" != "Success" ] && [ "$STATUS" != "Failed" ]; do
            sleep 10
            STATUS=$(aws ssm list-command-invocations --command-id "$COMMAND_ID" --details --query 'CommandInvocations[0].Status' --output text)
          done

          if [ "$STATUS" == "Failed" ]; then
            echo "Deployment failed"
            exit 1
          fi

      - name: Notify Discord of deployment result
        if: always()
        run: |
          if [ $STATUS == 'Success' ]; then
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "‚úÖ Deployment Success",
                "description": "Deployment completed successfully for commit `${{ github.sha }}`.",
                "color": 65280,
                "thumbnail": {
                  "url": "https://example.com/success-image.png"
                },
                "fields": [
                  {
                    "name": "Commit SHA",
                    "value": "${{ github.sha }}",
                    "inline": true
                  }
                ],
                "footer": {
                  "text": "GitHub Actions CI/CD"
                }
              }]
            }' ${{ secrets.DISCORD_WEBHOOK_URL }}
          else
            DEPLOY_LOG=$(aws ssm list-command-invocations --command-id "$COMMAND_ID" --details --query 'CommandInvocations[0].CommandPlugins[0].Output' --output text)
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "‚ùå Deployment Failure",
                "description": "Deployment failed for commit `${{ github.sha }}`. Check the logs for details.",
                "color": 16711680,
                "thumbnail": {
                  "url": "https://example.com/failure-image.png"
                },
                "fields": [
                  {
                    "name": "Instance ID",
                    "value": "${{ secrets.INSTANCE_ID }}",
                    "inline": true
                  },
                  {
                    "name": "Commit SHA",
                    "value": "${{ github.sha }}",
                    "inline": true
                  },
                  {
                    "name": "Error Log",
                    "value": "```${DEPLOY_LOG}```"
                  }
                ],
                "footer": {
                  "text": "GitHub Actions CI/CD"
                }
              }]
            }' ${{ secrets.DISCORD_WEBHOOK_URL }}
            exit 1
          fi
